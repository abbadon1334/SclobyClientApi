<?php
/**
 * SaleitemSchemaTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Scloby Api
 *
 * <a href='https://developer.scloby.com/apidoc/assets/documentation.json' target='_blank'>https://developer.scloby.com/apidoc/assets/documentation.json</a>  **Introduction**  **The authentication token is issued via Oauth2 standard ( https://oauth.net)**    You can apply for a Scloby test account on our developer portal **https://developer.scloby.com**   Here is your **ClientId** and **ClientSecret** for tests:    **client_id**: SclobyApiDocs    **client_secret**: DdyPNPvfPOGa0Izjct0C   **All data is JSON format, and the Content-Type header of POST/PUT request must be set to application/json.**  **Search Parameters**  You can perform a search in a collection using all first level properties in combination with some parameter, or specifying a value:    property = VALUE if you are searching for all items with a specific property value    property_since = MIN_VALUE if you are searching for all items with property value greater (or equal) than MIN_VALUE     property_max   = MAX_VALUE if you are searching for all items with property value smaller (or equal)than MAX_VALUE   property_like  = LIKE_VALUE if you are searching for a substring content.   You can use property_since and property_max in order to simulate **between** operator If you are using *equal* operator, all other operators for that parameter *will be ingnored*   If you are using _max or _since operator in strings, the alphabetical ordering will be used
 *
 * OpenAPI spec version: 2.0.0
 * Contact: dev@scloby.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25-SNAPSHOT
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * SaleitemSchemaTest Class Doc Comment
 *
 * @category    Class
 * @description SaleitemSchema
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SaleitemSchemaTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "SaleitemSchema"
     */
    public function testSaleitemSchema()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "external_id"
     */
    public function testPropertyExternalId()
    {
    }

    /**
     * Test attribute "sale_id"
     */
    public function testPropertySaleId()
    {
    }

    /**
     * Test attribute "reference_sequential_number"
     */
    public function testPropertyReferenceSequentialNumber()
    {
    }

    /**
     * Test attribute "reference_text"
     */
    public function testPropertyReferenceText()
    {
    }

    /**
     * Test attribute "reference_date"
     */
    public function testPropertyReferenceDate()
    {
    }

    /**
     * Test attribute "uuid"
     */
    public function testPropertyUuid()
    {
    }

    /**
     * Test attribute "item_id"
     */
    public function testPropertyItemId()
    {
    }

    /**
     * Test attribute "combination_id"
     */
    public function testPropertyCombinationId()
    {
    }

    /**
     * Test attribute "prize_id"
     */
    public function testPropertyPrizeId()
    {
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
    }

    /**
     * Test attribute "refund_cause_id"
     */
    public function testPropertyRefundCauseId()
    {
    }

    /**
     * Test attribute "refund_cause_description"
     */
    public function testPropertyRefundCauseDescription()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "barcode"
     */
    public function testPropertyBarcode()
    {
    }

    /**
     * Test attribute "sku"
     */
    public function testPropertySku()
    {
    }

    /**
     * Test attribute "notes"
     */
    public function testPropertyNotes()
    {
    }

    /**
     * Test attribute "not_discountable"
     */
    public function testPropertyNotDiscountable()
    {
    }

    /**
     * Test attribute "price"
     */
    public function testPropertyPrice()
    {
    }

    /**
     * Test attribute "cost"
     */
    public function testPropertyCost()
    {
    }

    /**
     * Test attribute "vat_perc"
     */
    public function testPropertyVatPerc()
    {
    }

    /**
     * Test attribute "final_price"
     */
    public function testPropertyFinalPrice()
    {
    }

    /**
     * Test attribute "final_net_price"
     */
    public function testPropertyFinalNetPrice()
    {
    }

    /**
     * Test attribute "quantity"
     */
    public function testPropertyQuantity()
    {
    }

    /**
     * Test attribute "lastupdate_at"
     */
    public function testPropertyLastupdateAt()
    {
    }

    /**
     * Test attribute "lastupdate_by"
     */
    public function testPropertyLastupdateBy()
    {
    }

    /**
     * Test attribute "added_at"
     */
    public function testPropertyAddedAt()
    {
    }

    /**
     * Test attribute "seller_id"
     */
    public function testPropertySellerId()
    {
    }

    /**
     * Test attribute "seller_name"
     */
    public function testPropertySellerName()
    {
    }

    /**
     * Test attribute "category_id"
     */
    public function testPropertyCategoryId()
    {
    }

    /**
     * Test attribute "category_name"
     */
    public function testPropertyCategoryName()
    {
    }

    /**
     * Test attribute "department_id"
     */
    public function testPropertyDepartmentId()
    {
    }

    /**
     * Test attribute "department_name"
     */
    public function testPropertyDepartmentName()
    {
    }

    /**
     * Test attribute "created_at"
     */
    public function testPropertyCreatedAt()
    {
    }

    /**
     * Test attribute "updated_at"
     */
    public function testPropertyUpdatedAt()
    {
    }

    /**
     * Test attribute "deleted_at"
     */
    public function testPropertyDeletedAt()
    {
    }

    /**
     * Test attribute "price_changes"
     */
    public function testPropertyPriceChanges()
    {
    }
}
