<?php
/**
 * SaleeinvoiceSchemaTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Scloby Api
 *
 * <a href='https://developer.scloby.com/apidoc/assets/documentation.json' target='_blank'>https://developer.scloby.com/apidoc/assets/documentation.json</a>  **Introduction**  **The authentication token is issued via Oauth2 standard ( https://oauth.net)**    You can apply for a Scloby test account on our developer portal **https://developer.scloby.com**   Here is your **ClientId** and **ClientSecret** for tests:    **client_id**: SclobyApiDocs    **client_secret**: DdyPNPvfPOGa0Izjct0C   **All data is JSON format, and the Content-Type header of POST/PUT request must be set to application/json.**  **Search Parameters**  You can perform a search in a collection using all first level properties in combination with some parameter, or specifying a value:    property = VALUE if you are searching for all items with a specific property value    property_since = MIN_VALUE if you are searching for all items with property value greater (or equal) than MIN_VALUE     property_max   = MAX_VALUE if you are searching for all items with property value smaller (or equal)than MAX_VALUE   property_like  = LIKE_VALUE if you are searching for a substring content.   You can use property_since and property_max in order to simulate **between** operator If you are using *equal* operator, all other operators for that parameter *will be ingnored*   If you are using _max or _since operator in strings, the alphabetical ordering will be used
 *
 * OpenAPI spec version: 2.0.0
 * Contact: dev@scloby.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.24
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * SaleeinvoiceSchemaTest Class Doc Comment
 *
 * @category    Class
 * @description SaleeinvoiceSchema
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SaleeinvoiceSchemaTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "SaleeinvoiceSchema"
     */
    public function testSaleeinvoiceSchema()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "sale_id"
     */
    public function testPropertySaleId()
    {
    }

    /**
     * Test attribute "invoice_progressive"
     */
    public function testPropertyInvoiceProgressive()
    {
    }

    /**
     * Test attribute "invoice_yearly_progressive"
     */
    public function testPropertyInvoiceYearlyProgressive()
    {
    }

    /**
     * Test attribute "send_progressive"
     */
    public function testPropertySendProgressive()
    {
    }

    /**
     * Test attribute "date"
     */
    public function testPropertyDate()
    {
    }

    /**
     * Test attribute "lastcreate_at"
     */
    public function testPropertyLastcreateAt()
    {
    }

    /**
     * Test attribute "external_id"
     */
    public function testPropertyExternalId()
    {
    }

    /**
     * Test attribute "intermediary_name"
     */
    public function testPropertyIntermediaryName()
    {
    }

    /**
     * Test attribute "last_status_update"
     */
    public function testPropertyLastStatusUpdate()
    {
    }

    /**
     * Test attribute "external_status"
     */
    public function testPropertyExternalStatus()
    {
    }

    /**
     * Test attribute "external_message"
     */
    public function testPropertyExternalMessage()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "deduction_type"
     */
    public function testPropertyDeductionType()
    {
    }

    /**
     * Test attribute "deduction_amount"
     */
    public function testPropertyDeductionAmount()
    {
    }

    /**
     * Test attribute "deduction_vat"
     */
    public function testPropertyDeductionVat()
    {
    }

    /**
     * Test attribute "deduction_cause"
     */
    public function testPropertyDeductionCause()
    {
    }

    /**
     * Test attribute "stamp_amount"
     */
    public function testPropertyStampAmount()
    {
    }

    /**
     * Test attribute "welfare_type"
     */
    public function testPropertyWelfareType()
    {
    }

    /**
     * Test attribute "welfare_perc"
     */
    public function testPropertyWelfarePerc()
    {
    }

    /**
     * Test attribute "welfare_amount"
     */
    public function testPropertyWelfareAmount()
    {
    }

    /**
     * Test attribute "welfare_taxable"
     */
    public function testPropertyWelfareTaxable()
    {
    }

    /**
     * Test attribute "welfare_vat"
     */
    public function testPropertyWelfareVat()
    {
    }

    /**
     * Test attribute "welfare_deduction"
     */
    public function testPropertyWelfareDeduction()
    {
    }

    /**
     * Test attribute "welfare_exemption"
     */
    public function testPropertyWelfareExemption()
    {
    }

    /**
     * Test attribute "welfare_ref"
     */
    public function testPropertyWelfareRef()
    {
    }

    /**
     * Test attribute "invoice_cause"
     */
    public function testPropertyInvoiceCause()
    {
    }

    /**
     * Test attribute "administrative_ref"
     */
    public function testPropertyAdministrativeRef()
    {
    }

    /**
     * Test attribute "invoice_art_73"
     */
    public function testPropertyInvoiceArt73()
    {
    }
}
