<?php
/**
 * ItemsTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Scloby Api
 *
 * <a href='https://developer.scloby.com/apidoc/assets/documentation.json' target='_blank'>https://developer.scloby.com/apidoc/assets/documentation.json</a>  **Introduction**  **The authentication token is issued via Oauth2 standard ( https://oauth.net)**    You can apply for a Scloby test account on our developer portal **https://developer.scloby.com**   Here is your **ClientId** and **ClientSecret** for tests:    **client_id**: SclobyApiDocs    **client_secret**: DdyPNPvfPOGa0Izjct0C   **All data is JSON format, and the Content-Type header of POST/PUT request must be set to application/json.**  **Search Parameters**  You can perform a search in a collection using all first level properties in combination with some parameter, or specifying a value:    property = VALUE if you are searching for all items with a specific property value    property_since = MIN_VALUE if you are searching for all items with property value greater (or equal) than MIN_VALUE     property_max   = MAX_VALUE if you are searching for all items with property value smaller (or equal)than MAX_VALUE   property_like  = LIKE_VALUE if you are searching for a substring content.   You can use property_since and property_max in order to simulate **between** operator If you are using *equal* operator, all other operators for that parameter *will be ingnored*   If you are using _max or _since operator in strings, the alphabetical ordering will be used
 *
 * OpenAPI spec version: 2.0.0
 * Contact: dev@scloby.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.24
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * ItemsTest Class Doc Comment
 *
 * @category    Class
 * @description Items
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ItemsTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Items"
     */
    public function testItems()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "sku"
     */
    public function testPropertySku()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "order_name"
     */
    public function testPropertyOrderName()
    {
    }

    /**
     * Test attribute "on_sale"
     */
    public function testPropertyOnSale()
    {
    }

    /**
     * Test attribute "not_discountable"
     */
    public function testPropertyNotDiscountable()
    {
    }

    /**
     * Test attribute "index"
     */
    public function testPropertyIndex()
    {
    }

    /**
     * Test attribute "color"
     */
    public function testPropertyColor()
    {
    }

    /**
     * Test attribute "checkout_mark"
     */
    public function testPropertyCheckoutMark()
    {
    }

    /**
     * Test attribute "favorite"
     */
    public function testPropertyFavorite()
    {
    }

    /**
     * Test attribute "ecommerce_sync"
     */
    public function testPropertyEcommerceSync()
    {
    }

    /**
     * Test attribute "season"
     */
    public function testPropertySeason()
    {
    }

    /**
     * Test attribute "brand"
     */
    public function testPropertyBrand()
    {
    }

    /**
     * Test attribute "code"
     */
    public function testPropertyCode()
    {
    }

    /**
     * Test attribute "price1"
     */
    public function testPropertyPrice1()
    {
    }

    /**
     * Test attribute "price2"
     */
    public function testPropertyPrice2()
    {
    }

    /**
     * Test attribute "price3"
     */
    public function testPropertyPrice3()
    {
    }

    /**
     * Test attribute "price4"
     */
    public function testPropertyPrice4()
    {
    }

    /**
     * Test attribute "price5"
     */
    public function testPropertyPrice5()
    {
    }

    /**
     * Test attribute "price6"
     */
    public function testPropertyPrice6()
    {
    }

    /**
     * Test attribute "price7"
     */
    public function testPropertyPrice7()
    {
    }

    /**
     * Test attribute "price8"
     */
    public function testPropertyPrice8()
    {
    }

    /**
     * Test attribute "price9"
     */
    public function testPropertyPrice9()
    {
    }

    /**
     * Test attribute "price10"
     */
    public function testPropertyPrice10()
    {
    }

    /**
     * Test attribute "cost"
     */
    public function testPropertyCost()
    {
    }

    /**
     * Test attribute "weight"
     */
    public function testPropertyWeight()
    {
    }

    /**
     * Test attribute "vat_perc"
     */
    public function testPropertyVatPerc()
    {
    }

    /**
     * Test attribute "option1_name"
     */
    public function testPropertyOption1Name()
    {
    }

    /**
     * Test attribute "option1_value"
     */
    public function testPropertyOption1Value()
    {
    }

    /**
     * Test attribute "option2_name"
     */
    public function testPropertyOption2Name()
    {
    }

    /**
     * Test attribute "option2_value"
     */
    public function testPropertyOption2Value()
    {
    }

    /**
     * Test attribute "option3_name"
     */
    public function testPropertyOption3Name()
    {
    }

    /**
     * Test attribute "option3_value"
     */
    public function testPropertyOption3Value()
    {
    }

    /**
     * Test attribute "option4_name"
     */
    public function testPropertyOption4Name()
    {
    }

    /**
     * Test attribute "option4_value"
     */
    public function testPropertyOption4Value()
    {
    }

    /**
     * Test attribute "thumbnail"
     */
    public function testPropertyThumbnail()
    {
    }

    /**
     * Test attribute "stock_type"
     */
    public function testPropertyStockType()
    {
    }

    /**
     * Test attribute "auto_unload"
     */
    public function testPropertyAutoUnload()
    {
    }

    /**
     * Test attribute "manual_production"
     */
    public function testPropertyManualProduction()
    {
    }

    /**
     * Test attribute "quantity_alert"
     */
    public function testPropertyQuantityAlert()
    {
    }

    /**
     * Test attribute "unit"
     */
    public function testPropertyUnit()
    {
    }

    /**
     * Test attribute "created_at"
     */
    public function testPropertyCreatedAt()
    {
    }

    /**
     * Test attribute "updated_at"
     */
    public function testPropertyUpdatedAt()
    {
    }

    /**
     * Test attribute "deleted_at"
     */
    public function testPropertyDeletedAt()
    {
    }

    /**
     * Test attribute "createdby_id"
     */
    public function testPropertyCreatedbyId()
    {
    }

    /**
     * Test attribute "updatedby_id"
     */
    public function testPropertyUpdatedbyId()
    {
    }

    /**
     * Test attribute "deletedby_id"
     */
    public function testPropertyDeletedbyId()
    {
    }

    /**
     * Test attribute "department_id"
     */
    public function testPropertyDepartmentId()
    {
    }

    /**
     * Test attribute "cache"
     */
    public function testPropertyCache()
    {
    }

    /**
     * Test attribute "category_id"
     */
    public function testPropertyCategoryId()
    {
    }

    /**
     * Test attribute "default_supplier_id"
     */
    public function testPropertyDefaultSupplierId()
    {
    }

    /**
     * Test attribute "net_price"
     */
    public function testPropertyNetPrice()
    {
    }

    /**
     * Test attribute "net_price2"
     */
    public function testPropertyNetPrice2()
    {
    }

    /**
     * Test attribute "net_price3"
     */
    public function testPropertyNetPrice3()
    {
    }

    /**
     * Test attribute "net_price4"
     */
    public function testPropertyNetPrice4()
    {
    }

    /**
     * Test attribute "net_price5"
     */
    public function testPropertyNetPrice5()
    {
    }

    /**
     * Test attribute "net_price6"
     */
    public function testPropertyNetPrice6()
    {
    }

    /**
     * Test attribute "net_price7"
     */
    public function testPropertyNetPrice7()
    {
    }

    /**
     * Test attribute "net_price8"
     */
    public function testPropertyNetPrice8()
    {
    }

    /**
     * Test attribute "net_price9"
     */
    public function testPropertyNetPrice9()
    {
    }

    /**
     * Test attribute "net_price10"
     */
    public function testPropertyNetPrice10()
    {
    }

    /**
     * Test attribute "variations"
     */
    public function testPropertyVariations()
    {
    }

    /**
     * Test attribute "components"
     */
    public function testPropertyComponents()
    {
    }

    /**
     * Test attribute "combinations"
     */
    public function testPropertyCombinations()
    {
    }

    /**
     * Test attribute "barcodes"
     */
    public function testPropertyBarcodes()
    {
    }

    /**
     * Test attribute "images"
     */
    public function testPropertyImages()
    {
    }

    /**
     * Test attribute "department"
     */
    public function testPropertyDepartment()
    {
    }

    /**
     * Test attribute "category"
     */
    public function testPropertyCategory()
    {
    }

    /**
     * Test attribute "allergens"
     */
    public function testPropertyAllergens()
    {
    }

    /**
     * Test attribute "bom_components"
     */
    public function testPropertyBomComponents()
    {
    }

    /**
     * Test attribute "channels"
     */
    public function testPropertyChannels()
    {
    }
}
