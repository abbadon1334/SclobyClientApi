<?php
/**
 * InlineResponse2011
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Scloby Api
 *
 * <a href='https://developer.scloby.com/apidoc/assets/documentation.json' target='_blank'>https://developer.scloby.com/apidoc/assets/documentation.json</a>  **Introduction**  **The authentication token is issued via Oauth2 standard ( https://oauth.net)**    You can apply for a Scloby test account on our developer portal **https://developer.scloby.com**   Here is your **ClientId** and **ClientSecret** for tests:    **client_id**: SclobyApiDocs    **client_secret**: DdyPNPvfPOGa0Izjct0C   **All data is JSON format, and the Content-Type header of POST/PUT request must be set to application/json.**  **Search Parameters**  You can perform a search in a collection using all first level properties in combination with some parameter, or specifying a value:    property = VALUE if you are searching for all items with a specific property value    property_since = MIN_VALUE if you are searching for all items with property value greater (or equal) than MIN_VALUE     property_max   = MAX_VALUE if you are searching for all items with property value smaller (or equal)than MAX_VALUE   property_like  = LIKE_VALUE if you are searching for a substring content.   You can use property_since and property_max in order to simulate **between** operator If you are using *equal* operator, all other operators for that parameter *will be ingnored*   If you are using _max or _since operator in strings, the alphabetical ordering will be used
 *
 * OpenAPI spec version: 2.0.0
 * Contact: dev@scloby.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.24
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * InlineResponse2011 Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse2011 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_201_1';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'gender' => 'string',
'created_at' => '\DateTime',
'updated_at' => '\DateTime',
'id' => 'int',
'company_name' => 'string',
'first_name' => 'string',
'last_name' => 'string',
'uuid' => 'string',
'birthdate' => '\DateTime',
'billing_street' => 'string',
'billing_number' => 'string',
'billing_city' => 'string',
'billing_zip' => 'string',
'billing_prov' => 'string',
'shipping_street' => 'string',
'shipping_number' => 'string',
'shipping_city' => 'string',
'shipping_prov' => 'string',
'phone' => 'string',
'mobile' => 'string',
'email' => 'string',
'email_pec' => 'string',
'tax_code' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'gender' => null,
'created_at' => 'date-time',
'updated_at' => 'date-time',
'id' => null,
'company_name' => null,
'first_name' => null,
'last_name' => null,
'uuid' => null,
'birthdate' => 'date-time',
'billing_street' => null,
'billing_number' => null,
'billing_city' => null,
'billing_zip' => null,
'billing_prov' => null,
'shipping_street' => null,
'shipping_number' => null,
'shipping_city' => null,
'shipping_prov' => null,
'phone' => null,
'mobile' => null,
'email' => null,
'email_pec' => null,
'tax_code' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'gender' => 'gender',
'created_at' => 'created_at',
'updated_at' => 'updated_at',
'id' => 'id',
'company_name' => 'company_name',
'first_name' => 'first_name',
'last_name' => 'last_name',
'uuid' => 'uuid',
'birthdate' => 'birthdate',
'billing_street' => 'billing_street',
'billing_number' => 'billing_number',
'billing_city' => 'billing_city',
'billing_zip' => 'billing_zip',
'billing_prov' => 'billing_prov',
'shipping_street' => 'shipping_street',
'shipping_number' => 'shipping_number',
'shipping_city' => 'shipping_city',
'shipping_prov' => 'shipping_prov',
'phone' => 'phone',
'mobile' => 'mobile',
'email' => 'email',
'email_pec' => 'email_pec',
'tax_code' => 'tax_code'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'gender' => 'setGender',
'created_at' => 'setCreatedAt',
'updated_at' => 'setUpdatedAt',
'id' => 'setId',
'company_name' => 'setCompanyName',
'first_name' => 'setFirstName',
'last_name' => 'setLastName',
'uuid' => 'setUuid',
'birthdate' => 'setBirthdate',
'billing_street' => 'setBillingStreet',
'billing_number' => 'setBillingNumber',
'billing_city' => 'setBillingCity',
'billing_zip' => 'setBillingZip',
'billing_prov' => 'setBillingProv',
'shipping_street' => 'setShippingStreet',
'shipping_number' => 'setShippingNumber',
'shipping_city' => 'setShippingCity',
'shipping_prov' => 'setShippingProv',
'phone' => 'setPhone',
'mobile' => 'setMobile',
'email' => 'setEmail',
'email_pec' => 'setEmailPec',
'tax_code' => 'setTaxCode'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'gender' => 'getGender',
'created_at' => 'getCreatedAt',
'updated_at' => 'getUpdatedAt',
'id' => 'getId',
'company_name' => 'getCompanyName',
'first_name' => 'getFirstName',
'last_name' => 'getLastName',
'uuid' => 'getUuid',
'birthdate' => 'getBirthdate',
'billing_street' => 'getBillingStreet',
'billing_number' => 'getBillingNumber',
'billing_city' => 'getBillingCity',
'billing_zip' => 'getBillingZip',
'billing_prov' => 'getBillingProv',
'shipping_street' => 'getShippingStreet',
'shipping_number' => 'getShippingNumber',
'shipping_city' => 'getShippingCity',
'shipping_prov' => 'getShippingProv',
'phone' => 'getPhone',
'mobile' => 'getMobile',
'email' => 'getEmail',
'email_pec' => 'getEmailPec',
'tax_code' => 'getTaxCode'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['uuid'] = isset($data['uuid']) ? $data['uuid'] : null;
        $this->container['birthdate'] = isset($data['birthdate']) ? $data['birthdate'] : null;
        $this->container['billing_street'] = isset($data['billing_street']) ? $data['billing_street'] : null;
        $this->container['billing_number'] = isset($data['billing_number']) ? $data['billing_number'] : null;
        $this->container['billing_city'] = isset($data['billing_city']) ? $data['billing_city'] : null;
        $this->container['billing_zip'] = isset($data['billing_zip']) ? $data['billing_zip'] : null;
        $this->container['billing_prov'] = isset($data['billing_prov']) ? $data['billing_prov'] : null;
        $this->container['shipping_street'] = isset($data['shipping_street']) ? $data['shipping_street'] : null;
        $this->container['shipping_number'] = isset($data['shipping_number']) ? $data['shipping_number'] : null;
        $this->container['shipping_city'] = isset($data['shipping_city']) ? $data['shipping_city'] : null;
        $this->container['shipping_prov'] = isset($data['shipping_prov']) ? $data['shipping_prov'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['mobile'] = isset($data['mobile']) ? $data['mobile'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['email_pec'] = isset($data['email_pec']) ? $data['email_pec'] : null;
        $this->container['tax_code'] = isset($data['tax_code']) ? $data['tax_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets gender
     *
     * @return string
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string $gender gender
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime $updated_at updated_at
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string $company_name company_name
     *
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name first_name
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name last_name
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets uuid
     *
     * @return string
     */
    public function getUuid()
    {
        return $this->container['uuid'];
    }

    /**
     * Sets uuid
     *
     * @param string $uuid uuid
     *
     * @return $this
     */
    public function setUuid($uuid)
    {
        $this->container['uuid'] = $uuid;

        return $this;
    }

    /**
     * Gets birthdate
     *
     * @return \DateTime
     */
    public function getBirthdate()
    {
        return $this->container['birthdate'];
    }

    /**
     * Sets birthdate
     *
     * @param \DateTime $birthdate birthdate
     *
     * @return $this
     */
    public function setBirthdate($birthdate)
    {
        $this->container['birthdate'] = $birthdate;

        return $this;
    }

    /**
     * Gets billing_street
     *
     * @return string
     */
    public function getBillingStreet()
    {
        return $this->container['billing_street'];
    }

    /**
     * Sets billing_street
     *
     * @param string $billing_street billing_street
     *
     * @return $this
     */
    public function setBillingStreet($billing_street)
    {
        $this->container['billing_street'] = $billing_street;

        return $this;
    }

    /**
     * Gets billing_number
     *
     * @return string
     */
    public function getBillingNumber()
    {
        return $this->container['billing_number'];
    }

    /**
     * Sets billing_number
     *
     * @param string $billing_number billing_number
     *
     * @return $this
     */
    public function setBillingNumber($billing_number)
    {
        $this->container['billing_number'] = $billing_number;

        return $this;
    }

    /**
     * Gets billing_city
     *
     * @return string
     */
    public function getBillingCity()
    {
        return $this->container['billing_city'];
    }

    /**
     * Sets billing_city
     *
     * @param string $billing_city billing_city
     *
     * @return $this
     */
    public function setBillingCity($billing_city)
    {
        $this->container['billing_city'] = $billing_city;

        return $this;
    }

    /**
     * Gets billing_zip
     *
     * @return string
     */
    public function getBillingZip()
    {
        return $this->container['billing_zip'];
    }

    /**
     * Sets billing_zip
     *
     * @param string $billing_zip billing_zip
     *
     * @return $this
     */
    public function setBillingZip($billing_zip)
    {
        $this->container['billing_zip'] = $billing_zip;

        return $this;
    }

    /**
     * Gets billing_prov
     *
     * @return string
     */
    public function getBillingProv()
    {
        return $this->container['billing_prov'];
    }

    /**
     * Sets billing_prov
     *
     * @param string $billing_prov billing_prov
     *
     * @return $this
     */
    public function setBillingProv($billing_prov)
    {
        $this->container['billing_prov'] = $billing_prov;

        return $this;
    }

    /**
     * Gets shipping_street
     *
     * @return string
     */
    public function getShippingStreet()
    {
        return $this->container['shipping_street'];
    }

    /**
     * Sets shipping_street
     *
     * @param string $shipping_street shipping_street
     *
     * @return $this
     */
    public function setShippingStreet($shipping_street)
    {
        $this->container['shipping_street'] = $shipping_street;

        return $this;
    }

    /**
     * Gets shipping_number
     *
     * @return string
     */
    public function getShippingNumber()
    {
        return $this->container['shipping_number'];
    }

    /**
     * Sets shipping_number
     *
     * @param string $shipping_number shipping_number
     *
     * @return $this
     */
    public function setShippingNumber($shipping_number)
    {
        $this->container['shipping_number'] = $shipping_number;

        return $this;
    }

    /**
     * Gets shipping_city
     *
     * @return string
     */
    public function getShippingCity()
    {
        return $this->container['shipping_city'];
    }

    /**
     * Sets shipping_city
     *
     * @param string $shipping_city shipping_city
     *
     * @return $this
     */
    public function setShippingCity($shipping_city)
    {
        $this->container['shipping_city'] = $shipping_city;

        return $this;
    }

    /**
     * Gets shipping_prov
     *
     * @return string
     */
    public function getShippingProv()
    {
        return $this->container['shipping_prov'];
    }

    /**
     * Sets shipping_prov
     *
     * @param string $shipping_prov shipping_prov
     *
     * @return $this
     */
    public function setShippingProv($shipping_prov)
    {
        $this->container['shipping_prov'] = $shipping_prov;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->container['mobile'];
    }

    /**
     * Sets mobile
     *
     * @param string $mobile mobile
     *
     * @return $this
     */
    public function setMobile($mobile)
    {
        $this->container['mobile'] = $mobile;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets email_pec
     *
     * @return string
     */
    public function getEmailPec()
    {
        return $this->container['email_pec'];
    }

    /**
     * Sets email_pec
     *
     * @param string $email_pec email_pec
     *
     * @return $this
     */
    public function setEmailPec($email_pec)
    {
        $this->container['email_pec'] = $email_pec;

        return $this;
    }

    /**
     * Gets tax_code
     *
     * @return string
     */
    public function getTaxCode()
    {
        return $this->container['tax_code'];
    }

    /**
     * Sets tax_code
     *
     * @param string $tax_code tax_code
     *
     * @return $this
     */
    public function setTaxCode($tax_code)
    {
        $this->container['tax_code'] = $tax_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
