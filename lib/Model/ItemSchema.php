<?php
/**
 * ItemSchema
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Scloby Api
 *
 * <a href='https://developer.scloby.com/apidoc/assets/documentation.json' target='_blank'>https://developer.scloby.com/apidoc/assets/documentation.json</a>  **Introduction**  **The authentication token is issued via Oauth2 standard ( https://oauth.net)**    You can apply for a Scloby test account on our developer portal **https://developer.scloby.com**   Here is your **ClientId** and **ClientSecret** for tests:    **client_id**: SclobyApiDocs    **client_secret**: DdyPNPvfPOGa0Izjct0C   **All data is JSON format, and the Content-Type header of POST/PUT request must be set to application/json.**  **Search Parameters**  You can perform a search in a collection using all first level properties in combination with some parameter, or specifying a value:    property = VALUE if you are searching for all items with a specific property value    property_since = MIN_VALUE if you are searching for all items with property value greater (or equal) than MIN_VALUE     property_max   = MAX_VALUE if you are searching for all items with property value smaller (or equal)than MAX_VALUE   property_like  = LIKE_VALUE if you are searching for a substring content.   You can use property_since and property_max in order to simulate **between** operator If you are using *equal* operator, all other operators for that parameter *will be ingnored*   If you are using _max or _since operator in strings, the alphabetical ordering will be used
 *
 * OpenAPI spec version: 2.0.0
 * Contact: dev@scloby.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.24
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ItemSchema Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ItemSchema implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Item schema';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
'sku' => 'string',
'name' => 'string',
'description' => 'string',
'order_name' => 'string',
'on_sale' => 'bool',
'not_discountable' => 'bool',
'index' => 'int',
'color' => 'string',
'checkout_mark' => 'bool',
'favorite' => 'bool',
'ecommerce_sync' => 'string',
'season' => 'string',
'brand' => 'string',
'code' => 'string',
'price1' => 'float',
'price2' => 'float',
'price3' => 'float',
'price4' => 'float',
'price5' => 'float',
'price6' => 'float',
'price7' => 'float',
'price8' => 'float',
'price9' => 'float',
'price10' => 'float',
'cost' => 'float',
'weight' => 'float',
'vat_perc' => 'float',
'option1_name' => 'string',
'option1_value' => 'string',
'option2_name' => 'string',
'option2_value' => 'string',
'option3_name' => 'string',
'option3_value' => 'string',
'option4_name' => 'string',
'option4_value' => 'string',
'thumbnail' => 'string',
'stock_type' => 'string',
'auto_unload' => 'bool',
'manual_production' => 'bool',
'quantity_alert' => 'float',
'unit' => 'string',
'created_at' => '\DateTime',
'updated_at' => '\DateTime',
'deleted_at' => '\DateTime',
'createdby_id' => 'int',
'updatedby_id' => 'int',
'deletedby_id' => 'int',
'department_id' => 'int',
'cache' => 'string',
'category_id' => 'int',
'default_supplier_id' => 'int',
'net_price' => 'object',
'net_price2' => 'object',
'net_price3' => 'object',
'net_price4' => 'object',
'net_price5' => 'object',
'net_price6' => 'object',
'net_price7' => 'object',
'net_price8' => 'object',
'net_price9' => 'object',
'net_price10' => 'object',
'variations' => '\Swagger\Client\Model\VariationSchema[]',
'components' => '\Swagger\Client\Model\ComponentSchema[]',
'combinations' => '\Swagger\Client\Model\ItemcombinationSchema[]',
'barcodes' => '\Swagger\Client\Model\ItembarcodeSchema[]',
'images' => '\Swagger\Client\Model\ItemimageSchema[]',
'department' => '\Swagger\Client\Model\DepartmentSchema',
'allergens' => '\Swagger\Client\Model\AllergenSchema[]',
'bom_components' => '\Swagger\Client\Model\ItembomcomponentSchema[]',
'channels' => '\Swagger\Client\Model\ItemchannelSchema[]',
'printers' => '\Swagger\Client\Model\PrinterSchema[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
'sku' => null,
'name' => null,
'description' => null,
'order_name' => null,
'on_sale' => null,
'not_discountable' => null,
'index' => null,
'color' => null,
'checkout_mark' => null,
'favorite' => null,
'ecommerce_sync' => null,
'season' => null,
'brand' => null,
'code' => null,
'price1' => null,
'price2' => null,
'price3' => null,
'price4' => null,
'price5' => null,
'price6' => null,
'price7' => null,
'price8' => null,
'price9' => null,
'price10' => null,
'cost' => null,
'weight' => null,
'vat_perc' => null,
'option1_name' => null,
'option1_value' => null,
'option2_name' => null,
'option2_value' => null,
'option3_name' => null,
'option3_value' => null,
'option4_name' => null,
'option4_value' => null,
'thumbnail' => null,
'stock_type' => null,
'auto_unload' => null,
'manual_production' => null,
'quantity_alert' => null,
'unit' => null,
'created_at' => 'date-time',
'updated_at' => 'date-time',
'deleted_at' => 'date-time',
'createdby_id' => null,
'updatedby_id' => null,
'deletedby_id' => null,
'department_id' => null,
'cache' => null,
'category_id' => null,
'default_supplier_id' => null,
'net_price' => null,
'net_price2' => null,
'net_price3' => null,
'net_price4' => null,
'net_price5' => null,
'net_price6' => null,
'net_price7' => null,
'net_price8' => null,
'net_price9' => null,
'net_price10' => null,
'variations' => null,
'components' => null,
'combinations' => null,
'barcodes' => null,
'images' => null,
'department' => null,
'allergens' => null,
'bom_components' => null,
'channels' => null,
'printers' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
'sku' => 'sku',
'name' => 'name',
'description' => 'description',
'order_name' => 'order_name',
'on_sale' => 'on_sale',
'not_discountable' => 'not_discountable',
'index' => 'index',
'color' => 'color',
'checkout_mark' => 'checkout_mark',
'favorite' => 'favorite',
'ecommerce_sync' => 'ecommerce_sync',
'season' => 'season',
'brand' => 'brand',
'code' => 'code',
'price1' => 'price1',
'price2' => 'price2',
'price3' => 'price3',
'price4' => 'price4',
'price5' => 'price5',
'price6' => 'price6',
'price7' => 'price7',
'price8' => 'price8',
'price9' => 'price9',
'price10' => 'price10',
'cost' => 'cost',
'weight' => 'weight',
'vat_perc' => 'vat_perc',
'option1_name' => 'option1_name',
'option1_value' => 'option1_value',
'option2_name' => 'option2_name',
'option2_value' => 'option2_value',
'option3_name' => 'option3_name',
'option3_value' => 'option3_value',
'option4_name' => 'option4_name',
'option4_value' => 'option4_value',
'thumbnail' => 'thumbnail',
'stock_type' => 'stock_type',
'auto_unload' => 'auto_unload',
'manual_production' => 'manual_production',
'quantity_alert' => 'quantity_alert',
'unit' => 'unit',
'created_at' => 'created_at',
'updated_at' => 'updated_at',
'deleted_at' => 'deleted_at',
'createdby_id' => 'createdby_id',
'updatedby_id' => 'updatedby_id',
'deletedby_id' => 'deletedby_id',
'department_id' => 'department_id',
'cache' => 'cache',
'category_id' => 'category_id',
'default_supplier_id' => 'default_supplier_id',
'net_price' => 'net_price',
'net_price2' => 'net_price2',
'net_price3' => 'net_price3',
'net_price4' => 'net_price4',
'net_price5' => 'net_price5',
'net_price6' => 'net_price6',
'net_price7' => 'net_price7',
'net_price8' => 'net_price8',
'net_price9' => 'net_price9',
'net_price10' => 'net_price10',
'variations' => 'variations',
'components' => 'components',
'combinations' => 'combinations',
'barcodes' => 'barcodes',
'images' => 'images',
'department' => 'department',
'allergens' => 'allergens',
'bom_components' => 'bom_components',
'channels' => 'channels',
'printers' => 'printers'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
'sku' => 'setSku',
'name' => 'setName',
'description' => 'setDescription',
'order_name' => 'setOrderName',
'on_sale' => 'setOnSale',
'not_discountable' => 'setNotDiscountable',
'index' => 'setIndex',
'color' => 'setColor',
'checkout_mark' => 'setCheckoutMark',
'favorite' => 'setFavorite',
'ecommerce_sync' => 'setEcommerceSync',
'season' => 'setSeason',
'brand' => 'setBrand',
'code' => 'setCode',
'price1' => 'setPrice1',
'price2' => 'setPrice2',
'price3' => 'setPrice3',
'price4' => 'setPrice4',
'price5' => 'setPrice5',
'price6' => 'setPrice6',
'price7' => 'setPrice7',
'price8' => 'setPrice8',
'price9' => 'setPrice9',
'price10' => 'setPrice10',
'cost' => 'setCost',
'weight' => 'setWeight',
'vat_perc' => 'setVatPerc',
'option1_name' => 'setOption1Name',
'option1_value' => 'setOption1Value',
'option2_name' => 'setOption2Name',
'option2_value' => 'setOption2Value',
'option3_name' => 'setOption3Name',
'option3_value' => 'setOption3Value',
'option4_name' => 'setOption4Name',
'option4_value' => 'setOption4Value',
'thumbnail' => 'setThumbnail',
'stock_type' => 'setStockType',
'auto_unload' => 'setAutoUnload',
'manual_production' => 'setManualProduction',
'quantity_alert' => 'setQuantityAlert',
'unit' => 'setUnit',
'created_at' => 'setCreatedAt',
'updated_at' => 'setUpdatedAt',
'deleted_at' => 'setDeletedAt',
'createdby_id' => 'setCreatedbyId',
'updatedby_id' => 'setUpdatedbyId',
'deletedby_id' => 'setDeletedbyId',
'department_id' => 'setDepartmentId',
'cache' => 'setCache',
'category_id' => 'setCategoryId',
'default_supplier_id' => 'setDefaultSupplierId',
'net_price' => 'setNetPrice',
'net_price2' => 'setNetPrice2',
'net_price3' => 'setNetPrice3',
'net_price4' => 'setNetPrice4',
'net_price5' => 'setNetPrice5',
'net_price6' => 'setNetPrice6',
'net_price7' => 'setNetPrice7',
'net_price8' => 'setNetPrice8',
'net_price9' => 'setNetPrice9',
'net_price10' => 'setNetPrice10',
'variations' => 'setVariations',
'components' => 'setComponents',
'combinations' => 'setCombinations',
'barcodes' => 'setBarcodes',
'images' => 'setImages',
'department' => 'setDepartment',
'allergens' => 'setAllergens',
'bom_components' => 'setBomComponents',
'channels' => 'setChannels',
'printers' => 'setPrinters'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
'sku' => 'getSku',
'name' => 'getName',
'description' => 'getDescription',
'order_name' => 'getOrderName',
'on_sale' => 'getOnSale',
'not_discountable' => 'getNotDiscountable',
'index' => 'getIndex',
'color' => 'getColor',
'checkout_mark' => 'getCheckoutMark',
'favorite' => 'getFavorite',
'ecommerce_sync' => 'getEcommerceSync',
'season' => 'getSeason',
'brand' => 'getBrand',
'code' => 'getCode',
'price1' => 'getPrice1',
'price2' => 'getPrice2',
'price3' => 'getPrice3',
'price4' => 'getPrice4',
'price5' => 'getPrice5',
'price6' => 'getPrice6',
'price7' => 'getPrice7',
'price8' => 'getPrice8',
'price9' => 'getPrice9',
'price10' => 'getPrice10',
'cost' => 'getCost',
'weight' => 'getWeight',
'vat_perc' => 'getVatPerc',
'option1_name' => 'getOption1Name',
'option1_value' => 'getOption1Value',
'option2_name' => 'getOption2Name',
'option2_value' => 'getOption2Value',
'option3_name' => 'getOption3Name',
'option3_value' => 'getOption3Value',
'option4_name' => 'getOption4Name',
'option4_value' => 'getOption4Value',
'thumbnail' => 'getThumbnail',
'stock_type' => 'getStockType',
'auto_unload' => 'getAutoUnload',
'manual_production' => 'getManualProduction',
'quantity_alert' => 'getQuantityAlert',
'unit' => 'getUnit',
'created_at' => 'getCreatedAt',
'updated_at' => 'getUpdatedAt',
'deleted_at' => 'getDeletedAt',
'createdby_id' => 'getCreatedbyId',
'updatedby_id' => 'getUpdatedbyId',
'deletedby_id' => 'getDeletedbyId',
'department_id' => 'getDepartmentId',
'cache' => 'getCache',
'category_id' => 'getCategoryId',
'default_supplier_id' => 'getDefaultSupplierId',
'net_price' => 'getNetPrice',
'net_price2' => 'getNetPrice2',
'net_price3' => 'getNetPrice3',
'net_price4' => 'getNetPrice4',
'net_price5' => 'getNetPrice5',
'net_price6' => 'getNetPrice6',
'net_price7' => 'getNetPrice7',
'net_price8' => 'getNetPrice8',
'net_price9' => 'getNetPrice9',
'net_price10' => 'getNetPrice10',
'variations' => 'getVariations',
'components' => 'getComponents',
'combinations' => 'getCombinations',
'barcodes' => 'getBarcodes',
'images' => 'getImages',
'department' => 'getDepartment',
'allergens' => 'getAllergens',
'bom_components' => 'getBomComponents',
'channels' => 'getChannels',
'printers' => 'getPrinters'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['sku'] = isset($data['sku']) ? $data['sku'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['order_name'] = isset($data['order_name']) ? $data['order_name'] : null;
        $this->container['on_sale'] = isset($data['on_sale']) ? $data['on_sale'] : null;
        $this->container['not_discountable'] = isset($data['not_discountable']) ? $data['not_discountable'] : null;
        $this->container['index'] = isset($data['index']) ? $data['index'] : null;
        $this->container['color'] = isset($data['color']) ? $data['color'] : null;
        $this->container['checkout_mark'] = isset($data['checkout_mark']) ? $data['checkout_mark'] : null;
        $this->container['favorite'] = isset($data['favorite']) ? $data['favorite'] : null;
        $this->container['ecommerce_sync'] = isset($data['ecommerce_sync']) ? $data['ecommerce_sync'] : null;
        $this->container['season'] = isset($data['season']) ? $data['season'] : null;
        $this->container['brand'] = isset($data['brand']) ? $data['brand'] : null;
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['price1'] = isset($data['price1']) ? $data['price1'] : null;
        $this->container['price2'] = isset($data['price2']) ? $data['price2'] : null;
        $this->container['price3'] = isset($data['price3']) ? $data['price3'] : null;
        $this->container['price4'] = isset($data['price4']) ? $data['price4'] : null;
        $this->container['price5'] = isset($data['price5']) ? $data['price5'] : null;
        $this->container['price6'] = isset($data['price6']) ? $data['price6'] : null;
        $this->container['price7'] = isset($data['price7']) ? $data['price7'] : null;
        $this->container['price8'] = isset($data['price8']) ? $data['price8'] : null;
        $this->container['price9'] = isset($data['price9']) ? $data['price9'] : null;
        $this->container['price10'] = isset($data['price10']) ? $data['price10'] : null;
        $this->container['cost'] = isset($data['cost']) ? $data['cost'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['vat_perc'] = isset($data['vat_perc']) ? $data['vat_perc'] : null;
        $this->container['option1_name'] = isset($data['option1_name']) ? $data['option1_name'] : null;
        $this->container['option1_value'] = isset($data['option1_value']) ? $data['option1_value'] : null;
        $this->container['option2_name'] = isset($data['option2_name']) ? $data['option2_name'] : null;
        $this->container['option2_value'] = isset($data['option2_value']) ? $data['option2_value'] : null;
        $this->container['option3_name'] = isset($data['option3_name']) ? $data['option3_name'] : null;
        $this->container['option3_value'] = isset($data['option3_value']) ? $data['option3_value'] : null;
        $this->container['option4_name'] = isset($data['option4_name']) ? $data['option4_name'] : null;
        $this->container['option4_value'] = isset($data['option4_value']) ? $data['option4_value'] : null;
        $this->container['thumbnail'] = isset($data['thumbnail']) ? $data['thumbnail'] : null;
        $this->container['stock_type'] = isset($data['stock_type']) ? $data['stock_type'] : null;
        $this->container['auto_unload'] = isset($data['auto_unload']) ? $data['auto_unload'] : null;
        $this->container['manual_production'] = isset($data['manual_production']) ? $data['manual_production'] : null;
        $this->container['quantity_alert'] = isset($data['quantity_alert']) ? $data['quantity_alert'] : null;
        $this->container['unit'] = isset($data['unit']) ? $data['unit'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['deleted_at'] = isset($data['deleted_at']) ? $data['deleted_at'] : null;
        $this->container['createdby_id'] = isset($data['createdby_id']) ? $data['createdby_id'] : null;
        $this->container['updatedby_id'] = isset($data['updatedby_id']) ? $data['updatedby_id'] : null;
        $this->container['deletedby_id'] = isset($data['deletedby_id']) ? $data['deletedby_id'] : null;
        $this->container['department_id'] = isset($data['department_id']) ? $data['department_id'] : null;
        $this->container['cache'] = isset($data['cache']) ? $data['cache'] : null;
        $this->container['category_id'] = isset($data['category_id']) ? $data['category_id'] : null;
        $this->container['default_supplier_id'] = isset($data['default_supplier_id']) ? $data['default_supplier_id'] : null;
        $this->container['net_price'] = isset($data['net_price']) ? $data['net_price'] : null;
        $this->container['net_price2'] = isset($data['net_price2']) ? $data['net_price2'] : null;
        $this->container['net_price3'] = isset($data['net_price3']) ? $data['net_price3'] : null;
        $this->container['net_price4'] = isset($data['net_price4']) ? $data['net_price4'] : null;
        $this->container['net_price5'] = isset($data['net_price5']) ? $data['net_price5'] : null;
        $this->container['net_price6'] = isset($data['net_price6']) ? $data['net_price6'] : null;
        $this->container['net_price7'] = isset($data['net_price7']) ? $data['net_price7'] : null;
        $this->container['net_price8'] = isset($data['net_price8']) ? $data['net_price8'] : null;
        $this->container['net_price9'] = isset($data['net_price9']) ? $data['net_price9'] : null;
        $this->container['net_price10'] = isset($data['net_price10']) ? $data['net_price10'] : null;
        $this->container['variations'] = isset($data['variations']) ? $data['variations'] : null;
        $this->container['components'] = isset($data['components']) ? $data['components'] : null;
        $this->container['combinations'] = isset($data['combinations']) ? $data['combinations'] : null;
        $this->container['barcodes'] = isset($data['barcodes']) ? $data['barcodes'] : null;
        $this->container['images'] = isset($data['images']) ? $data['images'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['allergens'] = isset($data['allergens']) ? $data['allergens'] : null;
        $this->container['bom_components'] = isset($data['bom_components']) ? $data['bom_components'] : null;
        $this->container['channels'] = isset($data['channels']) ? $data['channels'] : null;
        $this->container['printers'] = isset($data['printers']) ? $data['printers'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['price1'] === null) {
            $invalidProperties[] = "'price1' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets sku
     *
     * @return string
     */
    public function getSku()
    {
        return $this->container['sku'];
    }

    /**
     * Sets sku
     *
     * @param string $sku sku
     *
     * @return $this
     */
    public function setSku($sku)
    {
        $this->container['sku'] = $sku;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name The item name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets order_name
     *
     * @return string
     */
    public function getOrderName()
    {
        return $this->container['order_name'];
    }

    /**
     * Sets order_name
     *
     * @param string $order_name order_name
     *
     * @return $this
     */
    public function setOrderName($order_name)
    {
        $this->container['order_name'] = $order_name;

        return $this;
    }

    /**
     * Gets on_sale
     *
     * @return bool
     */
    public function getOnSale()
    {
        return $this->container['on_sale'];
    }

    /**
     * Sets on_sale
     *
     * @param bool $on_sale Set true to show it in orders or cash register
     *
     * @return $this
     */
    public function setOnSale($on_sale)
    {
        $this->container['on_sale'] = $on_sale;

        return $this;
    }

    /**
     * Gets not_discountable
     *
     * @return bool
     */
    public function getNotDiscountable()
    {
        return $this->container['not_discountable'];
    }

    /**
     * Sets not_discountable
     *
     * @param bool $not_discountable Set true make the item not discountable in cash register
     *
     * @return $this
     */
    public function setNotDiscountable($not_discountable)
    {
        $this->container['not_discountable'] = $not_discountable;

        return $this;
    }

    /**
     * Gets index
     *
     * @return int
     */
    public function getIndex()
    {
        return $this->container['index'];
    }

    /**
     * Sets index
     *
     * @param int $index index
     *
     * @return $this
     */
    public function setIndex($index)
    {
        $this->container['index'] = $index;

        return $this;
    }

    /**
     * Gets color
     *
     * @return string
     */
    public function getColor()
    {
        return $this->container['color'];
    }

    /**
     * Sets color
     *
     * @param string $color color
     *
     * @return $this
     */
    public function setColor($color)
    {
        $this->container['color'] = $color;

        return $this;
    }

    /**
     * Gets checkout_mark
     *
     * @return bool
     */
    public function getCheckoutMark()
    {
        return $this->container['checkout_mark'];
    }

    /**
     * Sets checkout_mark
     *
     * @param bool $checkout_mark checkout_mark
     *
     * @return $this
     */
    public function setCheckoutMark($checkout_mark)
    {
        $this->container['checkout_mark'] = $checkout_mark;

        return $this;
    }

    /**
     * Gets favorite
     *
     * @return bool
     */
    public function getFavorite()
    {
        return $this->container['favorite'];
    }

    /**
     * Sets favorite
     *
     * @param bool $favorite favorite
     *
     * @return $this
     */
    public function setFavorite($favorite)
    {
        $this->container['favorite'] = $favorite;

        return $this;
    }

    /**
     * Gets ecommerce_sync
     *
     * @return string
     */
    public function getEcommerceSync()
    {
        return $this->container['ecommerce_sync'];
    }

    /**
     * Sets ecommerce_sync
     *
     * @param string $ecommerce_sync ecommerce_sync
     *
     * @return $this
     */
    public function setEcommerceSync($ecommerce_sync)
    {
        $this->container['ecommerce_sync'] = $ecommerce_sync;

        return $this;
    }

    /**
     * Gets season
     *
     * @return string
     */
    public function getSeason()
    {
        return $this->container['season'];
    }

    /**
     * Sets season
     *
     * @param string $season season
     *
     * @return $this
     */
    public function setSeason($season)
    {
        $this->container['season'] = $season;

        return $this;
    }

    /**
     * Gets brand
     *
     * @return string
     */
    public function getBrand()
    {
        return $this->container['brand'];
    }

    /**
     * Sets brand
     *
     * @param string $brand brand
     *
     * @return $this
     */
    public function setBrand($brand)
    {
        $this->container['brand'] = $brand;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code code
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets price1
     *
     * @return float
     */
    public function getPrice1()
    {
        return $this->container['price1'];
    }

    /**
     * Sets price1
     *
     * @param float $price1 price1
     *
     * @return $this
     */
    public function setPrice1($price1)
    {
        $this->container['price1'] = $price1;

        return $this;
    }

    /**
     * Gets price2
     *
     * @return float
     */
    public function getPrice2()
    {
        return $this->container['price2'];
    }

    /**
     * Sets price2
     *
     * @param float $price2 price2
     *
     * @return $this
     */
    public function setPrice2($price2)
    {
        $this->container['price2'] = $price2;

        return $this;
    }

    /**
     * Gets price3
     *
     * @return float
     */
    public function getPrice3()
    {
        return $this->container['price3'];
    }

    /**
     * Sets price3
     *
     * @param float $price3 price3
     *
     * @return $this
     */
    public function setPrice3($price3)
    {
        $this->container['price3'] = $price3;

        return $this;
    }

    /**
     * Gets price4
     *
     * @return float
     */
    public function getPrice4()
    {
        return $this->container['price4'];
    }

    /**
     * Sets price4
     *
     * @param float $price4 price4
     *
     * @return $this
     */
    public function setPrice4($price4)
    {
        $this->container['price4'] = $price4;

        return $this;
    }

    /**
     * Gets price5
     *
     * @return float
     */
    public function getPrice5()
    {
        return $this->container['price5'];
    }

    /**
     * Sets price5
     *
     * @param float $price5 price5
     *
     * @return $this
     */
    public function setPrice5($price5)
    {
        $this->container['price5'] = $price5;

        return $this;
    }

    /**
     * Gets price6
     *
     * @return float
     */
    public function getPrice6()
    {
        return $this->container['price6'];
    }

    /**
     * Sets price6
     *
     * @param float $price6 price6
     *
     * @return $this
     */
    public function setPrice6($price6)
    {
        $this->container['price6'] = $price6;

        return $this;
    }

    /**
     * Gets price7
     *
     * @return float
     */
    public function getPrice7()
    {
        return $this->container['price7'];
    }

    /**
     * Sets price7
     *
     * @param float $price7 price7
     *
     * @return $this
     */
    public function setPrice7($price7)
    {
        $this->container['price7'] = $price7;

        return $this;
    }

    /**
     * Gets price8
     *
     * @return float
     */
    public function getPrice8()
    {
        return $this->container['price8'];
    }

    /**
     * Sets price8
     *
     * @param float $price8 price8
     *
     * @return $this
     */
    public function setPrice8($price8)
    {
        $this->container['price8'] = $price8;

        return $this;
    }

    /**
     * Gets price9
     *
     * @return float
     */
    public function getPrice9()
    {
        return $this->container['price9'];
    }

    /**
     * Sets price9
     *
     * @param float $price9 price9
     *
     * @return $this
     */
    public function setPrice9($price9)
    {
        $this->container['price9'] = $price9;

        return $this;
    }

    /**
     * Gets price10
     *
     * @return float
     */
    public function getPrice10()
    {
        return $this->container['price10'];
    }

    /**
     * Sets price10
     *
     * @param float $price10 price10
     *
     * @return $this
     */
    public function setPrice10($price10)
    {
        $this->container['price10'] = $price10;

        return $this;
    }

    /**
     * Gets cost
     *
     * @return float
     */
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param float $cost cost
     *
     * @return $this
     */
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return float
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param float $weight weight
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets vat_perc
     *
     * @return float
     */
    public function getVatPerc()
    {
        return $this->container['vat_perc'];
    }

    /**
     * Sets vat_perc
     *
     * @param float $vat_perc vat_perc
     *
     * @return $this
     */
    public function setVatPerc($vat_perc)
    {
        $this->container['vat_perc'] = $vat_perc;

        return $this;
    }

    /**
     * Gets option1_name
     *
     * @return string
     */
    public function getOption1Name()
    {
        return $this->container['option1_name'];
    }

    /**
     * Sets option1_name
     *
     * @param string $option1_name option1_name
     *
     * @return $this
     */
    public function setOption1Name($option1_name)
    {
        $this->container['option1_name'] = $option1_name;

        return $this;
    }

    /**
     * Gets option1_value
     *
     * @return string
     */
    public function getOption1Value()
    {
        return $this->container['option1_value'];
    }

    /**
     * Sets option1_value
     *
     * @param string $option1_value option1_value
     *
     * @return $this
     */
    public function setOption1Value($option1_value)
    {
        $this->container['option1_value'] = $option1_value;

        return $this;
    }

    /**
     * Gets option2_name
     *
     * @return string
     */
    public function getOption2Name()
    {
        return $this->container['option2_name'];
    }

    /**
     * Sets option2_name
     *
     * @param string $option2_name option2_name
     *
     * @return $this
     */
    public function setOption2Name($option2_name)
    {
        $this->container['option2_name'] = $option2_name;

        return $this;
    }

    /**
     * Gets option2_value
     *
     * @return string
     */
    public function getOption2Value()
    {
        return $this->container['option2_value'];
    }

    /**
     * Sets option2_value
     *
     * @param string $option2_value option2_value
     *
     * @return $this
     */
    public function setOption2Value($option2_value)
    {
        $this->container['option2_value'] = $option2_value;

        return $this;
    }

    /**
     * Gets option3_name
     *
     * @return string
     */
    public function getOption3Name()
    {
        return $this->container['option3_name'];
    }

    /**
     * Sets option3_name
     *
     * @param string $option3_name option3_name
     *
     * @return $this
     */
    public function setOption3Name($option3_name)
    {
        $this->container['option3_name'] = $option3_name;

        return $this;
    }

    /**
     * Gets option3_value
     *
     * @return string
     */
    public function getOption3Value()
    {
        return $this->container['option3_value'];
    }

    /**
     * Sets option3_value
     *
     * @param string $option3_value option3_value
     *
     * @return $this
     */
    public function setOption3Value($option3_value)
    {
        $this->container['option3_value'] = $option3_value;

        return $this;
    }

    /**
     * Gets option4_name
     *
     * @return string
     */
    public function getOption4Name()
    {
        return $this->container['option4_name'];
    }

    /**
     * Sets option4_name
     *
     * @param string $option4_name option4_name
     *
     * @return $this
     */
    public function setOption4Name($option4_name)
    {
        $this->container['option4_name'] = $option4_name;

        return $this;
    }

    /**
     * Gets option4_value
     *
     * @return string
     */
    public function getOption4Value()
    {
        return $this->container['option4_value'];
    }

    /**
     * Sets option4_value
     *
     * @param string $option4_value option4_value
     *
     * @return $this
     */
    public function setOption4Value($option4_value)
    {
        $this->container['option4_value'] = $option4_value;

        return $this;
    }

    /**
     * Gets thumbnail
     *
     * @return string
     */
    public function getThumbnail()
    {
        return $this->container['thumbnail'];
    }

    /**
     * Sets thumbnail
     *
     * @param string $thumbnail thumbnail
     *
     * @return $this
     */
    public function setThumbnail($thumbnail)
    {
        $this->container['thumbnail'] = $thumbnail;

        return $this;
    }

    /**
     * Gets stock_type
     *
     * @return string
     */
    public function getStockType()
    {
        return $this->container['stock_type'];
    }

    /**
     * Sets stock_type
     *
     * @param string $stock_type stock_type
     *
     * @return $this
     */
    public function setStockType($stock_type)
    {
        $this->container['stock_type'] = $stock_type;

        return $this;
    }

    /**
     * Gets auto_unload
     *
     * @return bool
     */
    public function getAutoUnload()
    {
        return $this->container['auto_unload'];
    }

    /**
     * Sets auto_unload
     *
     * @param bool $auto_unload auto_unload
     *
     * @return $this
     */
    public function setAutoUnload($auto_unload)
    {
        $this->container['auto_unload'] = $auto_unload;

        return $this;
    }

    /**
     * Gets manual_production
     *
     * @return bool
     */
    public function getManualProduction()
    {
        return $this->container['manual_production'];
    }

    /**
     * Sets manual_production
     *
     * @param bool $manual_production manual_production
     *
     * @return $this
     */
    public function setManualProduction($manual_production)
    {
        $this->container['manual_production'] = $manual_production;

        return $this;
    }

    /**
     * Gets quantity_alert
     *
     * @return float
     */
    public function getQuantityAlert()
    {
        return $this->container['quantity_alert'];
    }

    /**
     * Sets quantity_alert
     *
     * @param float $quantity_alert quantity_alert
     *
     * @return $this
     */
    public function setQuantityAlert($quantity_alert)
    {
        $this->container['quantity_alert'] = $quantity_alert;

        return $this;
    }

    /**
     * Gets unit
     *
     * @return string
     */
    public function getUnit()
    {
        return $this->container['unit'];
    }

    /**
     * Sets unit
     *
     * @param string $unit unit
     *
     * @return $this
     */
    public function setUnit($unit)
    {
        $this->container['unit'] = $unit;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime $updated_at updated_at
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets deleted_at
     *
     * @return \DateTime
     */
    public function getDeletedAt()
    {
        return $this->container['deleted_at'];
    }

    /**
     * Sets deleted_at
     *
     * @param \DateTime $deleted_at deleted_at
     *
     * @return $this
     */
    public function setDeletedAt($deleted_at)
    {
        $this->container['deleted_at'] = $deleted_at;

        return $this;
    }

    /**
     * Gets createdby_id
     *
     * @return int
     */
    public function getCreatedbyId()
    {
        return $this->container['createdby_id'];
    }

    /**
     * Sets createdby_id
     *
     * @param int $createdby_id createdby_id
     *
     * @return $this
     */
    public function setCreatedbyId($createdby_id)
    {
        $this->container['createdby_id'] = $createdby_id;

        return $this;
    }

    /**
     * Gets updatedby_id
     *
     * @return int
     */
    public function getUpdatedbyId()
    {
        return $this->container['updatedby_id'];
    }

    /**
     * Sets updatedby_id
     *
     * @param int $updatedby_id updatedby_id
     *
     * @return $this
     */
    public function setUpdatedbyId($updatedby_id)
    {
        $this->container['updatedby_id'] = $updatedby_id;

        return $this;
    }

    /**
     * Gets deletedby_id
     *
     * @return int
     */
    public function getDeletedbyId()
    {
        return $this->container['deletedby_id'];
    }

    /**
     * Sets deletedby_id
     *
     * @param int $deletedby_id deletedby_id
     *
     * @return $this
     */
    public function setDeletedbyId($deletedby_id)
    {
        $this->container['deletedby_id'] = $deletedby_id;

        return $this;
    }

    /**
     * Gets department_id
     *
     * @return int
     */
    public function getDepartmentId()
    {
        return $this->container['department_id'];
    }

    /**
     * Sets department_id
     *
     * @param int $department_id department_id
     *
     * @return $this
     */
    public function setDepartmentId($department_id)
    {
        $this->container['department_id'] = $department_id;

        return $this;
    }

    /**
     * Gets cache
     *
     * @return string
     */
    public function getCache()
    {
        return $this->container['cache'];
    }

    /**
     * Sets cache
     *
     * @param string $cache cache
     *
     * @return $this
     */
    public function setCache($cache)
    {
        $this->container['cache'] = $cache;

        return $this;
    }

    /**
     * Gets category_id
     *
     * @return int
     */
    public function getCategoryId()
    {
        return $this->container['category_id'];
    }

    /**
     * Sets category_id
     *
     * @param int $category_id category_id
     *
     * @return $this
     */
    public function setCategoryId($category_id)
    {
        $this->container['category_id'] = $category_id;

        return $this;
    }

    /**
     * Gets default_supplier_id
     *
     * @return int
     */
    public function getDefaultSupplierId()
    {
        return $this->container['default_supplier_id'];
    }

    /**
     * Sets default_supplier_id
     *
     * @param int $default_supplier_id default_supplier_id
     *
     * @return $this
     */
    public function setDefaultSupplierId($default_supplier_id)
    {
        $this->container['default_supplier_id'] = $default_supplier_id;

        return $this;
    }

    /**
     * Gets net_price
     *
     * @return object
     */
    public function getNetPrice()
    {
        return $this->container['net_price'];
    }

    /**
     * Sets net_price
     *
     * @param object $net_price net_price
     *
     * @return $this
     */
    public function setNetPrice($net_price)
    {
        $this->container['net_price'] = $net_price;

        return $this;
    }

    /**
     * Gets net_price2
     *
     * @return object
     */
    public function getNetPrice2()
    {
        return $this->container['net_price2'];
    }

    /**
     * Sets net_price2
     *
     * @param object $net_price2 net_price2
     *
     * @return $this
     */
    public function setNetPrice2($net_price2)
    {
        $this->container['net_price2'] = $net_price2;

        return $this;
    }

    /**
     * Gets net_price3
     *
     * @return object
     */
    public function getNetPrice3()
    {
        return $this->container['net_price3'];
    }

    /**
     * Sets net_price3
     *
     * @param object $net_price3 net_price3
     *
     * @return $this
     */
    public function setNetPrice3($net_price3)
    {
        $this->container['net_price3'] = $net_price3;

        return $this;
    }

    /**
     * Gets net_price4
     *
     * @return object
     */
    public function getNetPrice4()
    {
        return $this->container['net_price4'];
    }

    /**
     * Sets net_price4
     *
     * @param object $net_price4 net_price4
     *
     * @return $this
     */
    public function setNetPrice4($net_price4)
    {
        $this->container['net_price4'] = $net_price4;

        return $this;
    }

    /**
     * Gets net_price5
     *
     * @return object
     */
    public function getNetPrice5()
    {
        return $this->container['net_price5'];
    }

    /**
     * Sets net_price5
     *
     * @param object $net_price5 net_price5
     *
     * @return $this
     */
    public function setNetPrice5($net_price5)
    {
        $this->container['net_price5'] = $net_price5;

        return $this;
    }

    /**
     * Gets net_price6
     *
     * @return object
     */
    public function getNetPrice6()
    {
        return $this->container['net_price6'];
    }

    /**
     * Sets net_price6
     *
     * @param object $net_price6 net_price6
     *
     * @return $this
     */
    public function setNetPrice6($net_price6)
    {
        $this->container['net_price6'] = $net_price6;

        return $this;
    }

    /**
     * Gets net_price7
     *
     * @return object
     */
    public function getNetPrice7()
    {
        return $this->container['net_price7'];
    }

    /**
     * Sets net_price7
     *
     * @param object $net_price7 net_price7
     *
     * @return $this
     */
    public function setNetPrice7($net_price7)
    {
        $this->container['net_price7'] = $net_price7;

        return $this;
    }

    /**
     * Gets net_price8
     *
     * @return object
     */
    public function getNetPrice8()
    {
        return $this->container['net_price8'];
    }

    /**
     * Sets net_price8
     *
     * @param object $net_price8 net_price8
     *
     * @return $this
     */
    public function setNetPrice8($net_price8)
    {
        $this->container['net_price8'] = $net_price8;

        return $this;
    }

    /**
     * Gets net_price9
     *
     * @return object
     */
    public function getNetPrice9()
    {
        return $this->container['net_price9'];
    }

    /**
     * Sets net_price9
     *
     * @param object $net_price9 net_price9
     *
     * @return $this
     */
    public function setNetPrice9($net_price9)
    {
        $this->container['net_price9'] = $net_price9;

        return $this;
    }

    /**
     * Gets net_price10
     *
     * @return object
     */
    public function getNetPrice10()
    {
        return $this->container['net_price10'];
    }

    /**
     * Sets net_price10
     *
     * @param object $net_price10 net_price10
     *
     * @return $this
     */
    public function setNetPrice10($net_price10)
    {
        $this->container['net_price10'] = $net_price10;

        return $this;
    }

    /**
     * Gets variations
     *
     * @return \Swagger\Client\Model\VariationSchema[]
     */
    public function getVariations()
    {
        return $this->container['variations'];
    }

    /**
     * Sets variations
     *
     * @param \Swagger\Client\Model\VariationSchema[] $variations variations
     *
     * @return $this
     */
    public function setVariations($variations)
    {
        $this->container['variations'] = $variations;

        return $this;
    }

    /**
     * Gets components
     *
     * @return \Swagger\Client\Model\ComponentSchema[]
     */
    public function getComponents()
    {
        return $this->container['components'];
    }

    /**
     * Sets components
     *
     * @param \Swagger\Client\Model\ComponentSchema[] $components components
     *
     * @return $this
     */
    public function setComponents($components)
    {
        $this->container['components'] = $components;

        return $this;
    }

    /**
     * Gets combinations
     *
     * @return \Swagger\Client\Model\ItemcombinationSchema[]
     */
    public function getCombinations()
    {
        return $this->container['combinations'];
    }

    /**
     * Sets combinations
     *
     * @param \Swagger\Client\Model\ItemcombinationSchema[] $combinations combinations
     *
     * @return $this
     */
    public function setCombinations($combinations)
    {
        $this->container['combinations'] = $combinations;

        return $this;
    }

    /**
     * Gets barcodes
     *
     * @return \Swagger\Client\Model\ItembarcodeSchema[]
     */
    public function getBarcodes()
    {
        return $this->container['barcodes'];
    }

    /**
     * Sets barcodes
     *
     * @param \Swagger\Client\Model\ItembarcodeSchema[] $barcodes barcodes
     *
     * @return $this
     */
    public function setBarcodes($barcodes)
    {
        $this->container['barcodes'] = $barcodes;

        return $this;
    }

    /**
     * Gets images
     *
     * @return \Swagger\Client\Model\ItemimageSchema[]
     */
    public function getImages()
    {
        return $this->container['images'];
    }

    /**
     * Sets images
     *
     * @param \Swagger\Client\Model\ItemimageSchema[] $images images
     *
     * @return $this
     */
    public function setImages($images)
    {
        $this->container['images'] = $images;

        return $this;
    }

    /**
     * Gets department
     *
     * @return \Swagger\Client\Model\DepartmentSchema
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param \Swagger\Client\Model\DepartmentSchema $department department
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets allergens
     *
     * @return \Swagger\Client\Model\AllergenSchema[]
     */
    public function getAllergens()
    {
        return $this->container['allergens'];
    }

    /**
     * Sets allergens
     *
     * @param \Swagger\Client\Model\AllergenSchema[] $allergens allergens
     *
     * @return $this
     */
    public function setAllergens($allergens)
    {
        $this->container['allergens'] = $allergens;

        return $this;
    }

    /**
     * Gets bom_components
     *
     * @return \Swagger\Client\Model\ItembomcomponentSchema[]
     */
    public function getBomComponents()
    {
        return $this->container['bom_components'];
    }

    /**
     * Sets bom_components
     *
     * @param \Swagger\Client\Model\ItembomcomponentSchema[] $bom_components bom_components
     *
     * @return $this
     */
    public function setBomComponents($bom_components)
    {
        $this->container['bom_components'] = $bom_components;

        return $this;
    }

    /**
     * Gets channels
     *
     * @return \Swagger\Client\Model\ItemchannelSchema[]
     */
    public function getChannels()
    {
        return $this->container['channels'];
    }

    /**
     * Sets channels
     *
     * @param \Swagger\Client\Model\ItemchannelSchema[] $channels channels
     *
     * @return $this
     */
    public function setChannels($channels)
    {
        $this->container['channels'] = $channels;

        return $this;
    }

    /**
     * Gets printers
     *
     * @return \Swagger\Client\Model\PrinterSchema[]
     */
    public function getPrinters()
    {
        return $this->container['printers'];
    }

    /**
     * Sets printers
     *
     * @param \Swagger\Client\Model\PrinterSchema[] $printers printers
     *
     * @return $this
     */
    public function setPrinters($printers)
    {
        $this->container['printers'] = $printers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
